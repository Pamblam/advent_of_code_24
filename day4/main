#!/usr/bin/env node
const fs = require('fs');

(async function main(){

	const input = fs.readFileSync('input.txt', 'utf-8').trim().split("\n").map(l=>l.split(''));
	const chars = 'XMAS'.split('');

	// Get the number of matches present at the given position
	const getMatchCount = (starting_x, starting_y) => {

		// the number of matches at the given position
		let count = 0;

		// either incrementing (1), not changing (0), or decrementing (-1)
		let dir = [1,0,-1]; 

		// every possible combination of vertical and horizontal movement
		for(const h of dir){
			for(const v of dir){

				let isMatch = true;

				// iterate over every char
				for(let i=0; i<chars.length; i++){
					let char = chars[i];

					// the first iteration always starts at the specified position
					let x = starting_x;
					let y = starting_y;

					// each consecutive char is expected at the given position
					if(i>0){
						x += (i*v);
						y += (i*h);
					}

					// If the expected char is not at the position, it is not a match.
					if(!input[y] || !input[y][x] || char != input[y][x]){
						isMatch = false; 
						break;
					}
				}

				// If we matched the whole word return true
				if(isMatch) count++;
			}
		}

		return count;
	};

	let count = 0;

	// iterate over the entire grid and determine if each starting position is 
	for(let y=0; y<input.length; y++){
		for(let x=0; x<input[y].length; x++){

			// There could be multiple matches at this position, so we must return the number
			count += getMatchCount(x,y);

		}
	}

	console.log(count);

})();